// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique
  password      String
  perfil        Perfil?        @relation("PerfilDoUsuario")
  meta          Meta?          @relation("MetaDoUsuario")
  consumoAgua   ConsumoAgua[]
  refeicoes     Refeicao[]
}


model Perfil {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  nome           String
  sobrenome      String  
  dataNascimento DateTime
  peso           Float
  altura         Float
  sexo           String
  objetivo       String
  nivelAtividade String
  usuarioId      String   @unique @db.ObjectId
  usuario        User     @relation("PerfilDoUsuario", fields: [usuarioId], references: [id])
}


model Meta {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  calorias       Float
  proteinas      Float
  carboidratos   Float
  agua           Float
  gorduras       Float
  dataCriacao    DateTime
  usuarioId      String   @unique @db.ObjectId
  usuario        User     @relation("MetaDoUsuario", fields: [usuarioId], references: [id])
}


model ConsumoAgua {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  quantidade Float
  data       DateTime @default(now())
  usuarioId  String   @db.ObjectId
  usuario    User     @relation(fields: [usuarioId], references: [id])
}


model Refeicao {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  nome        String
  horario     DateTime @default(now())
  calorias    Float    @default(0)
  proteinas   Float    @default(0)
  carboidratos Float   @default(0)
  gorduras    Float    @default(0)
  usuarioId   String
  usuario     User     @relation(fields: [usuarioId], references: [id])
  alimentos   AlimentoRefeicao[]
}


model AlimentoRefeicao {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  nomeAlimento    String 
  quantidade      Float 
  calorias        Float
  proteinas       Float
  carboidratos    Float
  gorduras        Float
  codigoOpenFood  String? 
  refeicaoId      String
  refeicao        Refeicao @relation(fields: [refeicaoId], references: [id])
}


